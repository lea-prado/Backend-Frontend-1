<!-- views/cartActions.handlebars -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Acciones sobre Carrito</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body class="bg-light">
  <div class="container py-4">
    <h1>Acciones sobre Carrito</h1>
    <p>Utiliza estos botones para probar las operaciones con el carrito (GET, PUT, DELETE).</p>

    <hr>

    <!-- GET Cart -->
    <button class="btn btn-info" id="getCartBtn">GET Carrito (mostrar en consola)</button>
    
    <!-- PUT Cart: actualiza todo el array de productos -->
    <div class="mt-3">
      <label for="putProducts" class="form-label">Nuevo arreglo de productos (JSON)</label>
      <textarea id="putProducts" class="form-control" rows="2">
[
  { "product": "ID_PRODUCTO_1", "quantity": 2 },
  { "product": "ID_PRODUCTO_2", "quantity": 5 }
]
      </textarea>
      <button class="btn btn-warning mt-2" id="putCartBtn">PUT Carrito (reemplazar productos)</button>
    </div>

    <!-- DELETE Cart: elimina todos los productos -->
    <div class="mt-3">
      <button class="btn btn-danger" id="deleteCartBtn">DELETE Carrito (vaciar)</button>
    </div>

    <hr>

    <p>Revisa la consola del navegador para ver la respuesta del servidor.</p>
  </div>

  <script>
    const cartId = localStorage.getItem('cartId');

    if (!cartId) {
      alert("No existe un cartId en localStorage. Primero crea o accede a un carrito para continuar.");
    }

    // GET Carrito
    document.getElementById('getCartBtn').addEventListener('click', async () => {
      if (!cartId) return;
      try {
        const res = await fetch(`/api/carts/${cartId}`);
        const data = await res.json();
        console.log("GET Carrito:", data);
        alert("Revisa la consola para ver el resultado del GET del carrito.");
      } catch (error) {
        console.error("Error al obtener el carrito:", error);
      }
    });

    // PUT Carrito (reemplaza todo el array de products)
    document.getElementById('putCartBtn').addEventListener('click', async () => {
      if (!cartId) return;
      try {
        const productsText = document.getElementById('putProducts').value.trim();
        const productsArray = JSON.parse(productsText);

        const res = await fetch(`/api/carts/${cartId}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ products: productsArray })
        });
        const data = await res.json();
        console.log("PUT Carrito:", data);
        alert("Revisa la consola para ver el resultado del PUT del carrito.");
      } catch (error) {
        console.error("Error al actualizar el carrito:", error);
      }
    });

    // DELETE Carrito (vaciar todos los productos)
    document.getElementById('deleteCartBtn').addEventListener('click', async () => {
      if (!cartId) return;
      try {
        const res = await fetch(`/api/carts/${cartId}`, { method: 'DELETE' });
        const data = await res.json();
        console.log("DELETE Carrito:", data);
        alert("Carrito vaciado. Revisa la consola para ver la respuesta del servidor.");
      } catch (error) {
        console.error("Error al eliminar productos del carrito:", error);
      }
    });
  </script>
</body>
</html>
